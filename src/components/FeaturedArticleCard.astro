---
import Tag from "./Tag.astro";
import FormattedDate from "./FormattedDate.astro";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";


const {featuredArticleData} = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/article-placeholders/*.{jpeg,jpg,png,gif,webp}')
if (!images[featuredArticleData.data.heroImage]) throw new Error(`"${featuredArticleData.data.heroImage}" does not exist in glob: "/src/assets/article-placeholders/*.{jpeg,jpg,png,gif,webp}"`);
---
<!-- using relative for pseudo content trick here: -->
<article class="flex relative justify-center content-center h-[clamp(22rem,80lvh,36rem)]">
    {/* Thumbnail. h & w need to be full as img is a container for the img. This makes object-cover work grid-cols-[minmax(_18rem,18rem)*/}
    {/* title description thingy. Max  _20rem*/}
    <div class="card grid grid-rows-[minmax(_0rem,_20rem)_minmax(_0rem,_16rem)] grid-cols-[minmax(_20rem,_20rem)] bg-white rounded-md 
    font-notoSerif ">
        <Image class="object-cover h-full w-full rounded-t-md" 
        alt={featuredArticleData.data.alt} 
        src={images[featuredArticleData.data.heroImage]()}
        loading="eager"></Image>
        <div class="flex flex-col p-4 justify-between">
            <div class="flex flex-col grow gap-3 overflow-hidden">
                {/* advanced-truncation is for truncating and putting ellipses on overflowing text content. ELLIPSES HANDLED ON global.css
                interesting stuff for following elements to allow growing and growing and shrinking: https://codepen.io/Karan-Swansi-No/pen/RwzyrMv*/}
                <h6 class="title-text text-base font-bold max-h-[4.5rem] overflow-hidden advanced-trunction-3 shrink-0">
                    <a class="font-notoSerif after:absolute after:inset-0 focus:outline-none"
                        href={`/${featuredArticleData.collection}/${featuredArticleData.slug}/`}
                        data-astro-prefetch="load">
                        {featuredArticleData.data.title}
                    </a>
                </h6> 
                {/* within div because we are using container queries to apply truncation */}
                <div class="description_container flex-col grow shrink">
                    <p class="description_text text-base overflow-hidden grow-0 shrink">
                        {featuredArticleData.data.description}
                    </p>
                </div>
            </div>
            {/* consider adding datetime attribute for SEO*/}
            <date datetime={featuredArticleData.data.pubDate.toISOString()} class="mb-3">
                <FormattedDate date={featuredArticleData.data.pubDate}/>
            </date>
            <div class="flex flex-row text-am gap-1 text-sm">
                {
                    featuredArticleData.data.tags.map((tagName : string) => 
                        <Tag tagName={tagName}/>
                    )
                }
            </div>
        </div>
    </div>
</article>
